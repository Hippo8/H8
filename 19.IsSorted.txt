Scrivere una funzione RISC-V che verifichi se un array di N numeri in memoria (word contigue) contiene una sequenza ordinata di numeri interi (crescente). Verificare vuol dire: restituire 1 se la condizione Ã¨ vera, 0 altrimenti.

Il seguente codice in C
 realizza issorted
 (convertilo in RISC-V):
int issorted(int[] array, int size) {
    for (int i = 0; i < size-1; i++) {
        if (array[i] > array[i+1]) {
            return 0;
        }
    }
    return 1;
} 
Il valore di ritorno deve essere lasciato sul registro a0
.
Attenzione:
Incollare nel campo di sotto soltanto il contenuto della funzione issorted
 (in RISC-V)
Attenzione alle convenzioni di chiamata!
Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS
###################		CODE		#############################

################################################################################
# Procedure issorted
#   Input:  a0 = array, a1 = size
#   Output: a0 = 1 if the array is sorted, 0 otherwise
################################################################################
issorted:  
  beq a1, zero, issorted_return1

  li t0, 1                # idx
  lw t1, 0(a0)            # t1 contiene last

  issorted_loop:
    beq t0, a1, issorted_return1
    addi a0, a0, 4
    lw t2, 0(a0)
    blt t2, t1, issorted_return0 
    mv t1, t2
    addi t0, t0, 1
    j issorted_loop

  issorted_return1: 
    li a0, 1
    jr ra

  issorted_return0:
    li a0, 0
    jr ra


.globl _start
.data
  size:  .word  10
  array: .word  1,3,5,6,7,8,9,25,30,40

.text
_start:
    # chiama issorted
    la   a0, array
    la   a1, size
    lw   a1, 0(a1)
    jal  ra, issorted
    
    #exit
    li   a7, 10
    ecall