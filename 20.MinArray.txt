Scrivere una funzione minarray(array,size)
 che restituisca l'indice del valore minimo presente nell'array.

Il seguente codice in C
 realizza minarray
 (convertilo in RISC-V):
int minarray(int[] array, int size) {
    int min_idx = 0;
    int min_val = array[0];
    int i = 1;

    while (i < size) {
        if (array[i] < min_val) {
            min_idx = i;
            min_val = array[i];
        }
        ++i;
    }
    return min_idx;
}
Il valore di ritorno deve essere lasciato sul registro a0
.
Attenzione:
Incollare nel campo di sotto soltanto il contenuto della funzione minarray
 (in RISC-V)
Attenzione alle convenzioni di chiamata!
Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS
####################		CODE 		##########################

################################################################################
# Procedure minarray
#   Input:  a0 = array, a1 = size
#   Output: a0 = min_idx
################################################################################
minarray:
  li   t0, 0     # min_idx
  lw   t1, 0(a0) # min_value
  li   t2, 1     # i

  minarray_loop:
    # check if i == size
    beq  t2, a1, minarray_end

    # check if array[i] < min
    slli t3, t2, 2
    add  t3, a0, t3
    lw   t3, 0(t3)
    bgt  t3, t1, minarray_continue

    # update min
    mv   t1, t3
    mv   t0, t2

  minarray_continue:    
    addi t2, t2, 1  # increment i
  j minarray_loop

  minarray_end:
    mv   a0, t0
    jr   ra


	
  .globl _start
  .data
    size:  .word  10
    array: .word  3,1,6,6,23,17,9,25,3,4
  
  .text
  _start:
      # chiama minarray
      la   a0, array
      la   a1, size
      lw   a1, 0(a1)
      jal  ra, minarray
      
      #exit
      li   a7, 10
      ecall   
