Scrivere una procedura RISC-V per il calcolo del massimo comune divisore di due numeri interi positivi a
 e b
. A tale scopo, implementare l'algoritmo di Euclide come procedura MCD(a,b)
 da richiamare nel main. L'algoritmo di Euclide in pseudo-codice Ã¨ il seguente:

int MCD(int a, int b) {
    while (a != b) { 
        if (a > b)
            a = a - b;
        else
            b = b - a;
    }
    return a;
}
Il valore di ritorno deve essere lasciato sul registro a0
.
Attenzione:
Incollare nel campo di sotto soltanto il contenuto della funzione MCD
 (in RISC-V)
Attenzione alle convenzioni di chiamata!
Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS
######################			CODE 		###############################
mcd:
mcd_while:
      beq     a0, a1, mcd_end
      bge     a1, a0, mcd_else
      sub     a0, a0, a1
      j       mcd_while
mcd_else:
      sub     a1, a1, a0
      j       mcd_while
mcd_end:
      exit_required_leaf_function
      ret

.globl _start
.data
    num1: .dword 24
    num2: .dword 30
.text
_start:
    # call MCD
    la    a0, num1
    la    a1, num2
    ld    a0, 0(a0)
    ld    a1, 0(a1)     
    jal   ra, mcd

    #exit
    li    a7, 10
    ecall








