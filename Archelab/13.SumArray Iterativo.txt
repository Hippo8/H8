Scrivere una procedura sumarray
 che calcoli la somma di un array di size
 word in memoria.


Il seguente codice in C
 realizza sumarray
 (convertilo in RISC-V):
int sumarray(int[] array, int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += array[i];
    }
    return sum;
}

Come esercizio alternativo, preparare una soluzione ricorsiva seguendo il codice C riportato di seguito:
int sumarray(int[] array, int size) {
    if (size == 0) {
        return 0;
    } else {
        return array[size-1] + sumarray(array, size-1);
    }
}

Attenzione:
Incollare nel campo di sotto soltanto il contenuto della funzione sumarray
 (in RISC-V)
Si prega di fornire solo una soluzione alla volta (ricorsiva o iterativa)
Attenzione alle convenzioni di chiamata!
Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS
####################		CODE			#########################
sumarray:
addi sp, sp, -8
sd ra, 0(sp)
li t0, 0 # final sum
LOOP_sumi:
ble a1, zero, END_sumi # if s1 <= 0 goto end
lw t1, 0(a0) # first element of the vector
add t0, t0, t1 # sum the element
addi a1, a1, -1 # decrement the counter
addi a0, a0, 4 # move to the next word in the array
j LOOP_sumi
END_sumi:
mv a0, t0 # load the result
ld ra, 0(sp) # restore the return address
addi sp, sp, 8 # restore the stack pointer
ret


.globl _start
.data
    array: .word  1,2,3,4,5,6,7,8,9,10
    size:  .word  10
    
.text
_start:
    # chiama sumarray
    la   a0, array
    la   a1, size
    lw   a1, 0(a1)
    jal  ra, sumarray
    
    #exit
    li   a7, 10
    ecall
