Utilizzando il linguaggio assemblativo RISC-V, scrivere un metodo ricorsivo serief
 che riceva come parametro n, intero strettamente positivo (non è necessario verificare se il valore del parametro attuale è veramente positivo), restituendo il valore dell'n-esimo elemento della serie numerica così definita:

f(1)=1

f(2)=1

f(3)=1

f(x)=f(x−1)+f(x−2)+f(x−3)
, per x>3


Il valore di ritorno deve essere lasciato sul registro a0
.
Attenzione:
Incollare nel campo di sotto soltanto il contenuto della funzione serief
 (in RISC-V)
Attenzione alle convenzioni di chiamata!
Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS
####################		CODE 		###########################

#*******************************************************************************
# serief()
# f(1) = 1
# f(2) = 1
# f(3) = 1
# f(x) = f(x-1) + f(x-2) + f(x-3), for (x > 3)
#*******************************************************************************
serief:
      li    t0, 3
      bgt   a0, t0, serief_recursion
      li    a0, 1
      ret

serief_recursion:
      addi sp, sp, -24
      sd   ra, 0(sp)
      sd   s2, 8(sp)
      sd   s1, 16(sp)

      # f(x-1)
      addi  s2, a0, 0
      addi  a0, s2, -1
      jal   ra, serief
      add   s1, a0, zero

      # f(x-2)
      addi  a0, s2, -2
      jal   ra, serief
      add   s1, s1, a0

      # f(x-3)
      addi  a0, s2, -3
      jal   ra, serief
      add   a0, s1, a0

      ld   ra, 0(sp)
      ld   s2, 8(sp)
      ld   s1, 16(sp)
      addi sp, sp, 24
      ret


.globl _start
.data
    num: .dword 10        
.text
_start:
    # call serief
    la    a0, num
    jal   ra, serief

    #exit
    li    a7, 10
    ecall