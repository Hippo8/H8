Scrivere una procedura RISC-V per calcolare la lunghezza di una stringa di caratteri in C, escluso il carattere terminatore. Le stringhe di caratteri in C sono memorizzate come un array di byte in memoria, dove il byte '\0' (0x00) rappresenta la fine della stringa.

Il seguente codice in C
 realizza strlen
 (convertilo in RISC-V):
unsigned long strlen(char *str) {
    unsigned long i;
    for (i = 0; str[i] != '\0'; i++);
    return i;
}
Il valore di ritorno deve essere lasciato sul registro a0
.
Attenzione:
Incollare nel campo di sotto soltanto il contenuto della funzione strlen
 (in RISC-V)
Attenzione alle convenzioni di chiamata!
Usare il seguente codice "main" per sviluppo e debugging nel simulatore RARS
########################		CODE 			#####################
strlen:
      add  t0, zero, zero        # i = 0

                                 # Start of for loop
strlen_loop:
      add  t1, t0, a0            # Add the byte offset for str[i]
      lbu  t1, 0(t1)             # dereference str[i]
      beq  t1, zero, strlen_end  # if str[i] == 0, break for loop
      addi t0, t0, 1             # i++
      j    strlen_loop           # loop

strlen_end:
      addi a0, t0, 0             # Move t0 into a0 to return
      ret

.globl _start
.data
    str: .string  "My string"
.text
_start:
    # call strlen
    la   a0, str
    jal  ra, strlen

    #exit
    li   a7, 10
    ecall

    